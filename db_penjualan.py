# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'db_kampus.ui'
#
# Created by: PyQt5 UI code generator 5.15.11
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


import mysql.connector as mc
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QTableWidgetItem


class Ui_Product(object):
    def setupUi(self, Product):
        Product.setObjectName("Product")
        Product.resize(374, 339)
        self.gridLayout = QtWidgets.QGridLayout(Product)
        self.gridLayout.setObjectName("gridLayout")
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setObjectName("verticalLayout")
        self.labelId = QtWidgets.QLabel(Product)
        self.labelId.setObjectName("labelId")
        self.verticalLayout.addWidget(self.labelId)
        self.labelBarcode = QtWidgets.QLabel(Product)
        self.labelBarcode.setObjectName("labelBarcode")
        self.verticalLayout.addWidget(self.labelBarcode)
        self.labelName = QtWidgets.QLabel(Product)
        self.labelName.setObjectName("labelName")
        self.verticalLayout.addWidget(self.labelName)
        self.labelKategori = QtWidgets.QLabel(Product)
        self.labelKategori.setObjectName("labelKategori")
        self.verticalLayout.addWidget(self.labelKategori)
        self.labelQty = QtWidgets.QLabel(Product)
        self.labelQty.setObjectName("labelQty")
        self.verticalLayout.addWidget(self.labelQty)
        self.labelHarga = QtWidgets.QLabel(Product)
        self.labelHarga.setObjectName("labelHarga")
        self.verticalLayout.addWidget(self.labelHarga)
        self.gridLayout.addLayout(self.verticalLayout, 0, 0, 1, 1)
        self.verticalLayout_2 = QtWidgets.QVBoxLayout()
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.lineEditId = QtWidgets.QLineEdit(Product)
        self.lineEditId.setObjectName("lineEditId")
        self.verticalLayout_2.addWidget(self.lineEditId)
        self.lineEditBarcode = QtWidgets.QLineEdit(Product)
        self.lineEditBarcode.setObjectName("lineEditBarcode")
        self.verticalLayout_2.addWidget(self.lineEditBarcode)
        self.lineEditName = QtWidgets.QLineEdit(Product)
        self.lineEditName.setObjectName("lineEditName")
        self.verticalLayout_2.addWidget(self.lineEditName)
        self.lineEditKategori = QtWidgets.QLineEdit(Product)
        self.lineEditKategori.setObjectName("lineEditKategori")
        self.verticalLayout_2.addWidget(self.lineEditKategori)
        self.lineEditQty = QtWidgets.QLineEdit(Product)
        self.lineEditQty.setObjectName("lineEditQty")
        self.verticalLayout_2.addWidget(self.lineEditQty)
        self.lineEditHarga = QtWidgets.QLineEdit(Product)
        self.lineEditHarga.setObjectName("lineEditHarga")
        self.verticalLayout_2.addWidget(self.lineEditHarga)
        self.gridLayout.addLayout(self.verticalLayout_2, 0, 1, 1, 1)
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.pushButtonLoad = QtWidgets.QPushButton(Product)
        self.pushButtonLoad.setObjectName("pushButtonLoad")
        self.horizontalLayout.addWidget(self.pushButtonLoad)
        self.pushButtonCreate = QtWidgets.QPushButton(Product)
        self.pushButtonCreate.setObjectName("pushButtonCreate")
        self.horizontalLayout.addWidget(self.pushButtonCreate)
        self.pushButtonUpdate = QtWidgets.QPushButton(Product)
        self.pushButtonUpdate.setObjectName("pushButtonUpdate")
        self.horizontalLayout.addWidget(self.pushButtonUpdate)
        self.pushButtonDelete = QtWidgets.QPushButton(Product)
        self.pushButtonDelete.setObjectName("pushButtonDelete")
        self.horizontalLayout.addWidget(self.pushButtonDelete)
        self.gridLayout.addLayout(self.horizontalLayout, 1, 0, 1, 2)
        self.labelResult = QtWidgets.QLabel(Product)
        self.labelResult.setObjectName("labelResult")
        self.gridLayout.addWidget(self.labelResult, 2, 0, 1, 1)
        self.verticalLayout_3 = QtWidgets.QVBoxLayout()
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.tableWidget = QtWidgets.QTableWidget(Product)
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setColumnCount(6)
        self.tableWidget.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(5, item)
        self.verticalLayout_3.addWidget(self.tableWidget)
        self.gridLayout.addLayout(self.verticalLayout_3, 3, 0, 1, 2)
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.pushButtonSearch = QtWidgets.QPushButton(Product)
        self.pushButtonSearch.setObjectName("pushButtonSearch")
        self.horizontalLayout_2.addWidget(self.pushButtonSearch)
        self.lineEditFilter = QtWidgets.QLineEdit(Product)
        self.lineEditFilter.setObjectName("lineEditFilter")
        self.horizontalLayout_2.addWidget(self.lineEditFilter)
        self.gridLayout.addLayout(self.horizontalLayout_2, 4, 0, 1, 2)

        self.retranslateUi(Product)
        QtCore.QMetaObject.connectSlotsByName(Product)

        self.tableWidget.cellClicked.connect(self.getById)
        self.pushButtonLoad.clicked.connect(self.load)
        self.pushButtonCreate.clicked.connect(self.createdata)
        self.pushButtonUpdate.clicked.connect(self.updatedata)
        self.pushButtonDelete.clicked.connect(self.deletedata)
        self.pushButtonSearch.clicked.connect(self.searchdata)

    def getById(self, row, column):
        id = self.tableWidget.item(row, 0).text()
        barkode = self.tableWidget.item(row, 1).text()
        name = self.tableWidget.item(row, 2).text()
        kategori = self.tableWidget.item(row, 3).text()
        qty = self.tableWidget.item(row, 4).text()
        harga = self.tableWidget.item(row, 5).text()
        self.lineEditId.setText(id)
        self.lineEditBarcode.setText(barkode)
        self.lineEditName.setText(name)
        self.lineEditKategori.setText(kategori)
        self.lineEditQty.setText(qty)
        self.lineEditHarga.setText(harga)

    def load(self):
        try:
            mydb = mc.connect(
                host="localhost",
                user="root",
                password="",
                database="db_penjualan"
            )
            mycursor = mydb.cursor()
            mycursor.execute("SELECT * FROM product ORDER BY ID ASC")
            result = mycursor.fetchall()
            self.tableWidget.setRowCount(0)
            for row_number, row_data in enumerate(result):
                self.tableWidget.insertRow(row_number)
                for column_number, data in enumerate(row_data):
                    self.tableWidget.setItem(row_number, column_number, QTableWidgetItem(str(data)))
            self.labelResult.setText("Data product Berhasil Ditampilkan")
        except mc.Error as err:
            self.labelResult.setText("Data product Gagal DiLoad")

    def createdata(self):
        try:
            mydb = mc.connect(
                host ="localhost",
                user ="root",
                password ="",
                database ="db_penjualan"
            )
            cursor = mydb.cursor()
            id = self.lineEditId.text()
            barkode = self.lineEditBarcode.text()
            name = self.lineEditName.text()
            kategori = self.lineEditKategori.text()
            qty = self.lineEditQty.text()
            harga = self.lineEditHarga.text()

            sql = "INSERT INTO product (id,barkode,name,kategori,qty,harga) VALUES (%s,%s,%s,%s,%s,%s)"
            val = (id,barkode,name,kategori,qty,harga)
            cursor.execute(sql,val)
            mydb.commit()
            self.labelResult.setText("Data product Berhasil Disimpan")

            self.lineEditId.text()
            self.lineEditBarcode.text()
            self.lineEditName.text()
            self.lineEditKategori.text()
            self.lineEditQty.text()
            self.lineEditHarga.text()
        except mc.Error as e:
            self.labelResult.setText("Data product Gagal Disimpan")

    def updatedata(self):
        try:
            mydb = mc.connect(
                host="localhost",
                user="root",
                password="",
                database="db_penjualan"
            )
            cursor = mydb.cursor()
            id = self.lineEditId.text()
            barkode = self.lineEditBarcode.text()
            name = self.lineEditName.text()
            kategori = self.lineEditKategori.text()
            qty = self.lineEditQty.text()
            harga = self.lineEditHarga.text()

            sql = "UPDATE product SET barkode = %s, name = %s, kategori = %s, qty = %s, harga = %s WHERE id = %s"            
            val = (barkode,name,kategori,qty,harga,id)
            cursor.execute(sql, val)
            mydb.commit()
            self.labelResult.setText("Data product Berhasil Diupdate")

            self.lineEditId.setText("")
            self.lineEditBarcode.setText("")
            self.lineEditName.setText("")
            self.lineEditKategori.setText("")
            self.lineEditQty.setText("")
            self.lineEditHarga.setText("")
        except mc.Error as e:
            self.labelResult.setText("Data product Gagal Diupdate")
            
    def deletedata(self):
        try:
            mydb = mc.connect(
                host="localhost",
                user="root",
                password="",
                database="db_penjualan"
            )
            cursor = mydb.cursor()
            id = self.lineEditId.text()

            sql = "DELETE FROM product WHERE id = %s"
            val = (id,)
            cursor.execute(sql, val)
            mydb.commit()
            self.labelResult.setText("Data product Berhasil Dihapus")

            self.lineEditId.setText("")
            self.lineEditBarcode.setText("")
            self.lineEditName.setText("")
            self.lineEditKategori.setText("")
            self.lineEditQty.setText("")
            self.lineEditHarga.setText("")
        except mc.Error as e:
            self.labelResult.setText("Data product Gagal Dihapus")

    def searchdata(self):
        try:
            mydb = mc.connect(
                host="localhost",
                user="root",
                password="",
                database="db_penjualan"
            )
            mycursor = mydb.cursor()
            search_value = self.lineEditFilter.text()
            query = "SELECT * FROM product WHERE id LIKE %s OR name LIKE %s ORDER BY ID ASC"
            mycursor.execute(query, ('%' + search_value + '%', '%' + search_value + '%'))
            result = mycursor.fetchall()
            self.tableWidget.setRowCount(0)
            for row_number, row_data in enumerate(result):
                self.tableWidget.insertRow(row_number)
                for column_number, data in enumerate(row_data):
                    self.tableWidget.setItem(row_number, column_number, QTableWidgetItem(str(data)))
            self.labelResult.setText("Data product Berhasil Dicari")
        except mc.Error as err:
            self.labelResult.setText("Data product Gagal Dicari")

    def retranslateUi(self, Product):
        _translate = QtCore.QCoreApplication.translate
        Product.setWindowTitle(_translate("Product", "Form"))
        self.labelId.setText(_translate("Product", "Id"))
        self.labelBarcode.setText(_translate("Product", "Barcode"))
        self.labelName.setText(_translate("Product", "Name"))
        self.labelKategori.setText(_translate("Product", "Kategori"))
        self.labelQty.setText(_translate("Product", "Qty"))
        self.labelHarga.setText(_translate("Product", "Harga"))
        self.pushButtonLoad.setText(_translate("Product", "LOAD DATA"))
        self.pushButtonCreate.setText(_translate("Product", "CREATE DATA"))
        self.pushButtonUpdate.setText(_translate("Product", "UPDATE DATA"))
        self.pushButtonDelete.setText(_translate("Product", "DELETE DATA"))
        self.labelResult.setText(_translate("Product", "TextLabel"))
        item = self.tableWidget.horizontalHeaderItem(0)
        item.setText(_translate("Product", "Id"))
        item = self.tableWidget.horizontalHeaderItem(1)
        item.setText(_translate("Product", "Barcode"))
        item = self.tableWidget.horizontalHeaderItem(2)
        item.setText(_translate("Product", "Name"))
        item = self.tableWidget.horizontalHeaderItem(3)
        item.setText(_translate("Product", "Kategori"))
        item = self.tableWidget.horizontalHeaderItem(4)
        item.setText(_translate("Product", "Qty"))
        item = self.tableWidget.horizontalHeaderItem(5)
        item.setText(_translate("Product", "Harga"))
        self.pushButtonSearch.setText(_translate("Product", "SEARCH"))

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Product = QtWidgets.QWidget()
    ui = Ui_Product()
    ui.setupUi(Product)
    Product.show()
    sys.exit(app.exec_())